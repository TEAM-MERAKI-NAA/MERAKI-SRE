name: Deploy the MERAKI Application 

on:
  push:
    branches: [ latest-branch--updates ]

env:
  AZURE_VM_HOST: ${{ secrets.AZURE_VM_HOST }}
  AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
  AZURE_SSH_PRIVATE_KEY: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy Frontend
      run: |
        # SSH into VM and deploy frontend
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} '
          # Clone frontend repository
          rm -rf ~/MERAKI-FE
          git clone https://github.com/TEAM-MERAKI-NAA/MERAKI-FE.git ~/MERAKI-FE
          
          cd ~/MERAKI-FE
          # Login to ACR
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
          # Stop and remove existing containers
          docker stop $(docker ps -q --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/immihub-fe) || true
          docker rm $(docker ps -aq --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/immihub-fe) || true
          
          # Build and tag image
          docker build -t immihub-fe .
          docker tag immihub-fe ${{ secrets.ACR_LOGIN_SERVER }}/immihub-fe:latest
          
          # Push to ACR
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/immihub-fe:latest
          
          # Run the container
          docker run -d -p 3000:3000 ${{ secrets.ACR_LOGIN_SERVER }}/immihub-fe:latest
        '

    - name: Deploy Backend
      run: |
        # SSH into VM and deploy backend
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} '
          # Clone backend repository
          rm -rf ~/MERAKI-BE
          git clone https://github.com/TEAM-MERAKI-NAA/MERAKI-BE.git ~/MERAKI-BE
          
          cd ~/MERAKI-BE
          # Login to ACR
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
          # Stop and remove existing containers
          docker stop $(docker ps -q --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/immihub-be) || true
          docker rm $(docker ps -aq --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/immihub-be) || true
          
          # Build and tag image
          docker build -t immihub-be .
          docker tag immihub-be ${{ secrets.ACR_LOGIN_SERVER }}/immihub-be:latest
          
          # Push to ACR
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/immihub-be:latest
          
          # Run the container
          docker run -d -p 8000:8000 ${{ secrets.ACR_LOGIN_SERVER }}/immihub-be:latest
        '

    - name: Health Check
      run: |
        # Wait for services to start
        sleep 30
        
        # Check frontend
        curl -f http://${{ secrets.AZURE_VM_HOST }}:3000 || exit 1
        
        # Check backend
        curl -f http://${{ secrets.AZURE_VM_HOST }}:8000/health/ || exit 1

    - name: Cleanup
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa 
