name: Deploy MERAKI Application

on:
  push:
    branches: [ latest-branch--updates ]

env:
  AZURE_VM_HOST: ${{ secrets.AZURE_VM_HOST }}
  AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
  AZURE_SSH_PRIVATE_KEY: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
  ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy Frontend
      run: |
        # Copy frontend files to VM
        scp -r MERAKI-FE/* ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/MERAKI-FE/
        
        # SSH into VM and deploy frontend
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} '
          cd ~/MERAKI-FE
          # Login to ACR
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
          # Stop and remove existing containers
          docker stop $(docker ps -q --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-FE) || true
          docker rm $(docker ps -aq --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-FE) || true
          
          # Build and tag image
          docker build -t ImmiHub-FE .
          docker tag ImmiHub-FE ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-FE:latest
          
          # Push to ACR
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-FE:latest
          
          # Run the container
          docker run -d -p 3000:3000 ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-FE:latest
        '

    - name: Deploy Backend
      run: |
        # Copy backend files to VM
        scp -r MERAKI-BE/* ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/MERAKI-BE/
        
        # SSH into VM and deploy backend
        ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} '
          cd ~/MERAKI-BE
          # Login to ACR
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin
          
          # Stop and remove existing containers
          docker stop $(docker ps -q --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-BE) || true
          docker rm $(docker ps -aq --filter ancestor=${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-BE) || true
          
          # Build and tag image
          docker build -t ImmiHub-BE .
          docker tag ImmiHub-BE ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-BE:latest
          
          # Push to ACR
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-BE:latest
          
          # Run the container
          docker run -d -p 8000:8000 ${{ secrets.ACR_LOGIN_SERVER }}/ImmiHub-BE:latest
        '

    - name: Health Check
      run: |
        # Wait for services to start
        sleep 30
        
        # Check frontend
        curl -f http://${{ secrets.AZURE_VM_HOST }}:3000 || exit 1
        
        # Check backend
        curl -f http://${{ secrets.AZURE_VM_HOST }}:8000/health/ || exit 1

    - name: Cleanup
      if: always()
      run: |
        rm -f ~/.ssh/id_rsa 